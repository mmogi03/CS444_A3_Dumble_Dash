player_system_task:
  description: >
    Implement the Player Agent system. This includes setting up player health (100 HP),
    mana (50 MP), and movement logic in a 2D top-down environment. Also integrate checks
    to prevent spell casting when mana is insufficient.
  expected_output: >
    A JavaScript module or code section that controls player attributes, movement, and collisions.
  agent: player_agent

enemy_system_task:
  description: >
    Implement the Enemy Agent’s behavior with increasing difficulty as the player progresses.
  expected_output: >
    JavaScript code that manages enemy initialization, movement AI, and updates attributes.
  agent: enemy_agent

boss_system_task:
  description: >
    Develop the Boss Agent for special rooms. The boss should have significantly higher health,
    deal more damage, and use unique attack patterns.
  expected_output: >
    A specialized JavaScript module managing the boss's behavior and triggers.
  agent: boss_agent

map_generation_task:
  description: >
    Use the Map Agent to generate and manage the dungeon layout, including room transitions.
  expected_output: >
    Functions or classes to procedurally generate dungeon rooms and track progression.
  agent: map_agent

interaction_system_task:
  description: >
    Implement the combat system that handles interactions when the player collides with enemies,
    triggering turn-based combat.
  expected_output: >
    Methods that trigger combat UI, calculate damage, and manage victory/defeat.
  agent: interactions_agent

spell_system_task:
  description: >
    Implement the Spells Agent to define spells (e.g., Fireball, Mud Spikes, Heal) with distinct effects.
  expected_output: >
    A script or module defining spell objects and their effects.
  agent: spells_agent

template_menu_task:
  description: >
    Create the main menu and UI screens.
  expected_output: >
    HTML/CSS/JS code that renders the game menu and HUD.
  agent: template_agent

debugging_review_task:
  description: >
    Review and optimize all code for integration and performance.
  expected_output: >
    A revised and well-commented codebase.
  agent: debugger_code_reviewer

controls_integration_task:
  description: >
    Implement input handlers for keyboard, mouse, and touch.
  expected_output: >
    Script(s) that capture and process user input for gameplay.
  agent: input_controls_agent

basic_art_task:
  description: >
    Generate a basic placeholder art snippet using code (e.g., an HTML5 canvas drawing simple shapes).
  expected_output: >
    A snippet of HTML/JavaScript code that draws a simple art piece (for example, a canvas with a rectangle, circle, and text reading "Wizard Dungeon").
  prompt: "Generate an HTML5 canvas snippet that draws a simple scene with a rectangle, circle, and text 'Wizard Dungeon'."
  agent: project_manager

integration_task:
  description: >
    Integrate all generated code, comments, and assets into a final index.html file that can be run in a browser.
  expected_output: >
    A complete index.html file that stitches together the game’s code, comments, and assets.
  agent: project_manager
